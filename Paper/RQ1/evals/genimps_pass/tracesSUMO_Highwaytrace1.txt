len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) == 0 implies graph.nodes['passenger1']['signals'] == 0
len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) == 0 implies graph.nodes['passenger1']['brake'] == 0
len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) == 0 implies graph.nodes['passenger1']['signals'] >= graph.nodes['passenger2']['signals']
len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) == 0 implies graph.nodes['passenger1']['brake'] <= graph.nodes['passenger2']['brake']
len(nutils.getNeighborhood(graph, 'passenger1', 'LeftNeighbor')) == 1 implies graph.nodes['passenger1']['signals'] == 0
len(nutils.getNeighborhood(graph, 'passenger1', 'LeftNeighbor')) == 1 implies graph.nodes['passenger1']['brake'] == 0
len(nutils.getNeighborhood(graph, 'passenger1', 'LeftNeighbor')) == 1 implies graph.nodes['passenger1']['signals'] >= graph.nodes['passenger2']['signals']
len(nutils.getNeighborhood(graph, 'passenger1', 'LeftNeighbor')) == 1 implies graph.nodes['passenger1']['brake'] <= graph.nodes['passenger2']['brake']
len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) > len(nutils.getNeighbors(graph, 'passenger2', 'LeftNeighbor')) implies graph.nodes['passenger2']['signals'] == 0
len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) > len(nutils.getNeighbors(graph, 'passenger2', 'LeftNeighbor')) implies graph.nodes['passenger2']['brake'] == 0
len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) < len(nutils.getNeighbors(graph, 'passenger2', 'LeftNeighbor')) implies graph.nodes['passenger1']['signals'] == 0
len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) < len(nutils.getNeighbors(graph, 'passenger2', 'LeftNeighbor')) implies graph.nodes['passenger1']['brake'] == 0
graph.nodes['passenger1']['signals'] == -1 implies len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) == 1
graph.nodes['passenger1']['signals'] == -1 implies len(nutils.getNeighborhood(graph, 'passenger1', 'LeftNeighbor')) == 2
graph.nodes['passenger1']['brake'] == 1 implies len(nutils.getNeighbors(graph, 'passenger1', 'LeftNeighbor')) == 1
graph.nodes['passenger1']['brake'] == 1 implies len(nutils.getNeighborhood(graph, 'passenger1', 'LeftNeighbor')) == 2
