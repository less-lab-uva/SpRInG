ERROR: Unable to locate a modulefile for 'anaconda3/2021.5'
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: pip in /u/drb6yv/.local/lib/python3.9/site-packages (22.2.2)
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: matplotlib in /u/drb6yv/.local/lib/python3.9/site-packages (3.5.3)
Requirement already satisfied: pillow>=6.2.0 in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (from matplotlib) (8.4.0)
Requirement already satisfied: pyparsing>=2.2.1 in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (from matplotlib) (3.0.4)
Requirement already satisfied: cycler>=0.10 in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (from matplotlib) (0.10.0)
Requirement already satisfied: fonttools>=4.22.0 in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (from matplotlib) (4.25.0)
Requirement already satisfied: numpy>=1.17 in /u/drb6yv/.local/lib/python3.9/site-packages (from matplotlib) (1.22.3)
Requirement already satisfied: python-dateutil>=2.7 in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (from matplotlib) (2.8.2)
Requirement already satisfied: kiwisolver>=1.0.1 in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (from matplotlib) (1.3.1)
Requirement already satisfied: packaging>=20.0 in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (from matplotlib) (21.0)
Requirement already satisfied: six in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (from cycler>=0.10->matplotlib) (1.16.0)
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: networkx in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (2.6.3)
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: numpy in /u/drb6yv/.local/lib/python3.9/site-packages (1.22.3)
Defaulting to user installation because normal site-packages is not writeable
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Installing collected packages: argparse
Successfully installed argparse-1.4.0
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: tqdm in /sw/centos-7.4/anaconda3/2021.11/lib/python3.9/site-packages (4.62.3)
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
Generating spatial encodings...
DiGraph with 4 nodes and 2 edges
Predicate inference...
Generating Implications...
Generalizing Relations...
Checking Generalizations...

+ 24 predicates
+ 20323 implications
+ 0 generalized predicates
+ 542 generalized implications

The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
Generating spatial encodings...
DiGraph with 3 nodes and 1 edges
Predicate inference...
Generating Implications...
Generalizing Relations...
Checking Generalizations...

+ 20 predicates
+ 19493 implications
+ 0 generalized predicates
+ 622 generalized implications

